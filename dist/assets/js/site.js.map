{"version":3,"sources":["yuna.js","plugins.js","main.js"],"names":["_global","this","undefined","Yuna","global","singleton","apply","receiver","config","defaults","constructor","Object","i","emptyFn","isArray","value","Array","isObject","isNumber","Number","isString","String","isBoolean","Boolean","isDate","Date","isFunction","Function","isNull","isUndefined","isEmpty","length","createCallback","func","context","argCount","call","other","index","collection","accumulator","arguments","property","key","obj","has","hasOwnProperty","keys","push","pairs","matches","attrs","pair","iteratee","hasElement","charAt","document","getElementById","substr","elems","getElementsByTagName","className","indexOf","map","currentKey","results","clone","item","mergeObject","origin","j","mergeValue","console","log","method","noop","methods","window","jq","$","click","toggleClass","jQuery"],"mappings":"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","file":"site.js","sourcesContent":["/**\n * Initialization of Yuna Namespace\n */\n(function() {\n\tvar _global = this;\n\t\n\tif (_global.Yuna === undefined)\n\t{\n\t  _global.Yuna = {};\n\t}\n\t\n\tYuna.global = _global;\n\tYuna.singleton = Yuna;\n  \n\t/**\n\t * Copies all properties (or method) in config or defaults into receiver. Act as internal utility for class creation.\n\t *\n\t * @method\n\t * @param {object}  receiver The target object to receive the copy.\n\t * @param {object}  config   The object to be copied.\n\t * @param {object}  defaults If sepecified, the default object will be used instead of config.\n\t *\n\t * @return receiver The target object with new applied properties.\n\t */\n\tYuna.apply = function(receiver, config, defaults) {\n\t  if (defaults) {\n\t\tYuna.apply(receiver, defaults);\n\t  }\n\t  \n\t  if (receiver && config && config.constructor === Object) {\n\t\tif (receiver === null) {\n\t\t  receiver = {};\n\t\t}\n\t\tvar i;\n\t\tfor (i in config) {\n\t\t  receiver[i] = config[i];\n\t\t}\n\t  }\n\t  \n\t  return receiver;\n\t};\n  })();\n  \n  \n  Yuna.apply(Yuna, {\n\temptyFn: function() {},\n  \n\t/**\n\t * Validate the specified value by returning true if the specified value is Array. Otherwise, will return false.\n\t * @method\n\t * @static\n\t * @param {any} value Any value to validate\n\t * @return {Boolean}\n\t */\n\tisArray: function(value) {\n\t  return value.constructor == Array;\n\t},\n\t/**\n\t * Validate the specified value by returning true if the specified value is Object. Otherwise, will return false.\n\t * @method\n\t * @static\n\t * @param {any} value Any value to validate\n\t * @return {Boolean}\n\t */\n\tisObject: function(value) {\n\t  return value.constructor == Object;\n\t},\n\t/**\n\t * Validate the specified value by returning true if the specified value is Number. Otherwise, will return false.\n\t * @method\n\t * @static\n\t * @param {any} value Any value to validate\n\t * @return {Boolean}\n\t */\n\tisNumber: function(value) {\n\t  return value.constructor == Number;\n\t},\n\t/**\n\t * Validate the specified value by returning true if the specified value is String. Otherwise, will return false.\n\t * @method\n\t * @static\n\t * @param {any} value Any value to validate\n\t * @return {Boolean}\n\t */\n\tisString: function(value) {\n\t  if (value !== undefined) return value.constructor == String;\n\t  else return false;\n\t},\n\t/**\n\t * Validate the specified value by returning true if the specified value is Boolean. Otherwise, will return false.\n\t * @method\n\t * @static\n\t * @param {any} value Any value to validate\n\t * @return {Boolean}\n\t */\n\tisBoolean: function(value) {\n\t  return value.constructor == Boolean;\n\t},\n\t/**\n\t * Validate the specified value by returning true if the specified value is Date. Otherwise, will return false.\n\t * @method\n\t * @static\n\t * @param {any} value Any value to validate\n\t * @return {Boolean}\n\t */\n\tisDate: function(value) {\n\t  return value.constructor == Date;\n\t},\n\t/**\n\t * Validate the specified value by returning true if the specified value is Function. Otherwise, will return false.\n\t * @method\n\t * @static\n\t * @param {any} value Any value to validate\n\t * @return {Boolean}\n\t */\n\tisFunction: function(value) {\n\t  return value.constructor == Function;\n\t},\n\t/**\n\t * Validate the specified value by returning true if the specified value is null. Otherwise, will return false.\n\t * @method\n\t * @static\n\t * @param {any} value Any value to validate\n\t * @return {Boolean}\n\t */\n\tisNull: function(value) {\n\t  return value === null;\n\t},\n\t/**\n\t * Validate the specified value by returning true if the specified value is undefined. Otherwise, will return false.\n\t * @method\n\t * @static\n\t * @param {any} value Any value to validate\n\t * @return {Boolean}\n\t */\n\tisUndefined: function(value) {\n\t  return value === undefined;\n\t},\n\t/**\n\t * Validate the specified value by returning true if the specified value is empty. Otherwise, will return false. Empty value are:\n\t * <ul>\n\t * <li>null</li>\n\t * <li>undefined</li>\n\t * <li>an empty array</li>\n\t * <li>an empty string</li>\n\t * </ul>\n\t * @method\n\t * @static\n\t * @param {any} value Any value to validate.\n\t * @return {Boolean} The value of the validation.\n\t */\n\tisEmpty: function(value) {\n\t  return (value === null) || (Yuna.isArray(value) && value.length === 0) || (Yuna.isUndefined(value) || (Yuna.isString(value) && value === \"\"));\n\t},\n  \n\tcreateCallback: function(func, context, argCount) {\n\t  if (context === void 0) return func;\n\t  switch (argCount === null ? 3 : argCount) {\n\t\tcase 1: return function(value) {\n\t\t  return func.call(context, value);\n\t\t};\n\t\tcase 2: return function(value, other) {\n\t\t  return func.call(context, value, other);\n\t\t};\n\t\tcase 3: return function(value, index, collection) {\n\t\t  return func.call(context, value, index, collection);\n\t\t};\n\t\tcase 4: return function(accumulator, value, index, collection) {\n\t\t  return func.call(context, accumulator, value, index, collection);\n\t\t};\n\t  }\n\t  return function() {\n\t\treturn func.apply(context, arguments);\n\t  };\n\t},\n  \n\tproperty: function(key) {\n\t  return function(obj) {\n\t\treturn obj[key];\n\t  };\n\t},\n  \n\thas: function(obj, key) {\n\t  return obj !== null && hasOwnProperty.call(obj, key);\n\t},\n  \n\tkeys: function(obj) {\n\t  if (!Yuna.isObject(obj)) return [];\n\t  if (Object.keys) return Object.keys(obj);\n\t  var keys = [];\n\t  for (var key in obj) if (Yuna.has(obj, key)) keys.push(key);\n\t  return keys;\n\t},\n  \n\tpairs: function(obj) {\n\t  var keys = Yuna.keys(obj);\n\t  var length = keys.length;\n\t  var pairs = Array(length);\n\t  for (var i = 0; i < length; i++) {\n\t\tpairs[i] = [keys[i], obj[keys[i]]];\n\t  }\n\t  return pairs;\n\t},\n  \n\tmatches: function(attrs) {\n\t  var pairs = Yuna.pairs(attrs), length = pairs.length;\n\t  return function(obj) {\n\t\tif (obj === null) return !length;\n\t\tobj = new Object(obj);\n\t\tfor (var i = 0; i < length; i++) {\n\t\t  var pair = pairs[i], key = pair[0];\n\t\t  if (pair[1] !== obj[key] || !(key in obj)) return false;\n\t\t}\n\t\treturn true;\n\t  };\n\t},\n  \n\titeratee: function(value, context, argCount) {\n\t  if (value === null) return Yuna.emptyFn;\n\t  if (Yuna.isFunction(value)) return Yuna.createCallback(value, context, argCount);\n\t  if (Yuna.isObject(value)) return Yuna.matches(value);\n\t  return Yuna.property(value);\n\t},\n  \n\t/**\n\t * Will look whether the current DOM have a given element.\n\t * @method\n\t * @static\n\t * @param {string} value The ID of target element with their JQuery-styled of class and ID (the '.' and '#' leading character).\n\t * @return {Boolean} The value of target element existence.\n\t */\n\thasElement: function(value) {\n\t  var leading = value.charAt(0), result = false;\n  \n\t  switch (leading) {\n\t\tcase '#':\n\t\t  if (document.getElementById(value.substr(1))) return true;\n\t\tbreak;\n\t\tcase '.':\n\t\t  var elems = document.getElementsByTagName('*'), i;\n\t\t  for (i in elems) {\n\t\t\tif ((' ' + elems[i].className + ' ').indexOf(' ' + value.substr(1) +' ') > -1) return true;\n\t\t  }\n\t\tbreak;\n\t  }\n\t  return result;\n\t}\n  });\n  \n  (function() {\n\tYuna.Array = {\n\t  map: function(obj, iteratee, context) {\n\t\tif (obj === null) return [];\n\t\titeratee = Yuna.iteratee(iteratee, context);\n\t\tvar keys = obj.length !== +obj.length && Yuna.keys(obj),\n\t\t\tlength = (keys || obj).length,\n\t\t\tresults = Array(length),\n\t\t\tcurrentKey;\n\t\tfor (var index = 0; index < length; index++) {\n\t\t  currentKey = keys ? keys[index] : index;\n\t\t  results[index] = iteratee(obj[currentKey], currentKey, obj);\n\t\t}\n\t\treturn results;\n\t  }\n\t};\n  })();\n  \n  \n  (function(){\n  \n\tYuna.Object = {\n\t  \n\t  clone: function(item) {\n\t  },\n\t  \n\t  /**\n\t   * Merging specified object into {origin} object.\n\t   * @method\n\t   * @static\n\t   * @param {object} origin A receiver object that receive the merged object.\n\t   * @param {object} target An object that will be merged into {origin}.\n\t   * @return {object} A new merged object.\n\t   */\n\t  mergeObject: function(origin) {\n\t\tfor (var i = 1, j = arguments.length; i < j; i++){\n\t\t  var obj = arguments[i];\n\t\t  for (var key in obj) {\n\t\t\tif (Yuna.isObject(obj[key])) Yuna.Object.mergeObject(origin, key, obj[key]);\n\t\t\telse Yuna.Object.mergeValue(origin, key, obj[key]);\n\t\t  }\n\t\t}\n\t\treturn origin;\n\t  },\n\t  \n\t  /**\n\t   * Merging specified key-value pair into {origin} object.\n\t   * @method\n\t   * @static\n\t   * @param {object}  origin  A receiver object that receive the merged object.\n\t   * @param {string}  key     A string of named variable. This will be used as variable name in the merged object.\n\t   * @param {any}     value   A named value. This will be used as value in the merged object.\n\t   * @return {object} A new merged object.\n\t   */\n\t  mergeValue: function(origin, key, value) {\n\t\tif (Yuna.isString(key)) {\n\t\t  if (Yuna.isObject(value) && Yuna.isObject(origin[key])) {\n\t\t\tYuna.Object.mergeObject(origin[key], value);\n\t\t  }\n\t\t  else {\n\t\t\torigin[key] = value;\n\t\t  }\n\t\t}\n\t\telse {\n\t\t  origin[key] = value;\n\t\t}\n\t\treturn origin;\n\t  }\n\t};\n  })();\n\n  console.log('Yuna applied');","// Avoid `console` errors in browsers that lack a console.\n(function() {\n\tvar method;\n\tvar noop = function () {};\n\tvar methods = [\n\t\t\t'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\n\t\t\t'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\n\t\t\t'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\n\t\t\t'timeStamp', 'trace', 'warn'\n\t];\n\tvar length = methods.length;\n\tvar console = (window.console = window.console || {});\n\n\twhile (length--) {\n\t\t\tmethod = methods[length];\n\n\t\t\t// Only stub undefined methods.\n\t\t\tif (!console[method]) {\n\t\t\t\t\tconsole[method] = noop;\n\t\t\t}\n\t}\n}());","(function(jq) {\n\t$('#js_nav_expand').click(function(){\n\t\t$(this).toggleClass('open');\n\t\t$('#js_nav').toggleClass('collapsed');\n\t});\n})(jQuery);"]}